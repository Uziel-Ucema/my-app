<% if user_signed_in? %>
    <div class="alert-subscription">
        <h2>Alert Subscription</h2>
        <ul id="folderChecklist" class="folder-list"></ul>
        <button class="btn btn-primary save-changes-btn">Save Changes</button>
    </div>
<% end %>

<script>
  const bucketName = 'primero1023';
  const apiUrl = `https://storage.googleapis.com/storage/v1/b/${bucketName}/o`;

  function fetchFolderData() {
    return fetch(apiUrl, {
      headers: {
        'Cache-Control': 'max-age=86400',
      },
    }).then(response => response.json());
  }

  function extractFolderTitles(data) {
    return data.items.reduce((titles, item) => {
      const pathSegments = item.name.split('/');
      const folderName = pathSegments[0];

      if (!titles.includes(folderName)) {
        titles.push(folderName);
      }

      return titles;
    }, []);
  }

  function renderFolderChecklist(folderTitles) {
    const folderChecklist = document.getElementById('folderChecklist');

    folderTitles.forEach(title => {
      const listItem = document.createElement('li');
      listItem.classList.add('folder-list-item');

      const checkbox = document.createElement('input');
      checkbox.type = 'checkbox';
      checkbox.id = title;

      const label = document.createElement('label');
      label.htmlFor = title;
      label.textContent = title;

      listItem.appendChild(checkbox);
      listItem.appendChild(label);

      folderChecklist.appendChild(listItem);
    });
  }

  function handleFetchError(error) {
    console.error('Error fetching folder data: ', error);
  }

  fetchFolderData()
    .then(data => {
      const folderTitles = extractFolderTitles(data);
      renderFolderChecklist(folderTitles);
    })
    .catch(handleFetchError);
</script>

<script>
  const bucketName = 'primero1023';
  const apiUrl = `https://storage.googleapis.com/storage/v1/b/${bucketName}/o`;

  async function fetchFolderData() {
    const response = await fetch(apiUrl, {
      headers: {
        'Cache-Control': 'max-age=86400',
      },
    });
    return response.json();
  }

  function extractFolderTitles(data) {
    return data.items.reduce((titles, item) => {
      const pathSegments = item.name.split('/');
      const folderName = pathSegments[0];

      if (!titles.includes(folderName)) {
        titles.push(folderName);
      }

      return titles;
    }, []);
  }

  function renderFolderChecklist(folderTitles) {
    const folderChecklist = document.getElementById('folderChecklist');

    folderTitles.forEach(title => {
      const listItem = document.createElement('li');
      listItem.classList.add('folder-list-item');

      const checkbox = document.createElement('input');
      checkbox.type = 'checkbox';
      checkbox.id = title;

      const label = document.createElement('label');
      label.htmlFor = title;
      label.textContent = title;

      listItem.appendChild(checkbox);
      listItem.appendChild(label);

      folderChecklist.appendChild(listItem);
    });
  }

  function handleFetchError(error) {
    console.error('Error fetching folder data: ', error);
  }

  async function initialize() {
    try {
      const data = await fetchFolderData();
      const folderTitles = extractFolderTitles(data);
      renderFolderChecklist(folderTitles);
    } catch (error) {
      handleFetchError(error);
    }
  }

  initialize();
</script>
